rm(list=ls(all=T))
options(digits=4, scipen=12)
pacman::p_load(ggplot2, manipulate, dplyr, latex2exp)
load("~/GitHub/Final-proj/tf-pro-rev.rdata")

#因为数据问题，假设获利率为0.3
MRG = 0.5

#设定R2为行销对象
B0 = subset(B, status=="N2")
P0=B$Buy
R0=B$Rev 

#假設二：固定成本、增加回購機率
k2 = 0.15  # max. incremental effect of instrument
cost = 5   #
par(mar=c(4,3,3,2), cex=0.8)
PI = MRG * R0 * ifelse(P0<=(1-k2), k2, 1-P0) - cost
hist(PI,main="淨期望報償分布(R2)")

#计算本行销工具在各个族群的效益
B = B %>% mutate(
  PI = MRG*Rev*ifelse(Buy<=(1-k2), k2, 1-Buy) - cost
  ) 
B %>% group_by(Status) %>% 
  summarise(
    No.Target = sum(PI>0),
    AvgROI = mean(PI[PI>0]),
    TotalROI = sum(PI[PI>0])) %>% 
  arrange(No.Target) %>% 
  data.frame


#该工具的报偿分布
par(mfrow=c(4,2), mar=c(4,3,3,2), cex=0.8)
for(s in c("N1","N2","N3","N4","N5","N6","N7","N8")) {
  hist(B$PI[B$Status==s],main=s,xlim=c(-5,100),xlab="exp.profit",ylim=c(0,80000))
  abline(v=0, col='green', lty=2)}
  
#带有参数的模拟方式
S1=0.5; #回购几率弹性
S2=1.2;
d=0.2
MGR = 0.3
#MRG = (MGR+1)(1-d) - 1 
#R   = R(1-d)
#P   = P(1+S1*d)
#Profit = 
curve(((MGR+1)*(1-x)-1)*median(R0)*(1-x)*median(P0)*(1+S1*x),0,1, lwd=2,
      ylim=c(-50, 50),main=TeX('PI'), ylab="f(x)"
)
#abline(h=seq(0,0.2,0.05),v=seq(0,30,5),col='lightgrey',lty=2)

#利用manipulate进行模拟
manipulate({
  curve(m*plogis((10/a)*(x-b)), 0, 30, lwd=2, ylim=c(0, 0.25),
        main = TeX('$m \\cdot Logis(10(x - b)/a)$'), ylab="f(x)")
  abline(h=seq(0,0.2,0.05),v=seq(0,30,5),col='lightgrey',lty=2)
},
m = slider(0.05, 0.25,  0.20, step=0.01),
a = slider(  10,   30,    20, step=1),
b = slider(   4,   20,    15, step=1)
) 

#使用模拟方法找到最佳策略参数
#不过这个出来还是一个群组的，没有分组的情景
#但是至少这个函数我们可以掌握了
manipulate({
  do.call(rbind, lapply(seq(0,1,0.05), function(d){
    B %>% mutate(
      PI =  ((MRG+1)*(1-d)-1)*ifelse(Rev<12000,Rev,0)*(1-d)*Buy*(1+S1*d)
    ) %>%
      group_by(Status) %>% summarise(
        Discount = d,
        AvgROI = mean(PI),
        TotalPI = sum(PI)
      ) } ) ) %>% 
    ggplot(aes(x=Discount, y=TotalPI), col=B$Status) +
    geom_line(size=1.2)+
    ggtitle("PI with discount ")
},
S1 = slider(0.05, 0.50,  0.20, step=0.01)
) 
