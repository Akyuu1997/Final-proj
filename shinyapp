---
title: "shiny app for Tafeng data"
output: 
  flexdashboard::flex_dashboard:
    theme: default
#   css: JH.css
    social: menu
    source_code: embed 
#    logo: nsysu48.png
#    favicon: nsysu48.png
runtime: shiny
---

```{r}
library(shinyWidgets);library(flexdashboard); library(pwr);
library(metRology); library(fitdistrplus); 
library(ggpubr); library(lattice); library(gridExtra)

K = 200000
set.seed(2)
P = list( Normal = rnorm(K, 50, 10),  Uniform = runif(K, 0, 100),
          SkewRight = rtri(K, 20, 100, 30), SkewLeft = rtri(K, 0, 80, 70),
          TriRight = rtri(K, 25, 100, 25), TriLeft = rtri(K, 0, 75, 75),
          Beta2 = 100*rbeta(K, 2, 2), Beta.5 = 100*rbeta(K, .5, .5) )

```

分群方法{data-icon="fa-rocket"}
#上面这个参数是什么东西？
=====================================================================

Column A1 {.sidebar data-width=270}
-------------------------------------
```{r}
# {r child = 'Test/theory.Rmd'}
#what's this?
chooseSliderSkin("Nice")
selectInput("规则分群", "族群年龄分布", choices=list(
  "Normal" = 1, "Uniform" = 2, "Skew.Right" = 3, "Skew.Left" = 4,
  "Tri.Right" = 5, "TriLeft" = 6, "Beta(2,2)" = 7, "Beta(.5,.5)" = 8
  ), selected=1）
hr()
```


策略模擬 {data-icon="fa-bar-chart"}
#本来这里应该是最后一步，但是现在要先完成
#目前我们需要的变量（两个滑条）：价格弹性，购买几率弹性
#central figure：x-aex d（discount） Y1(R) Y2(Profit)
=====================================================================

Column D1 {.sidebar data-width=200}
-------------------------------------
```{r}
# {r child = 'Test/simulate.Rmd'}
hr()
h6("价格弹性设定")
#这边的range等待更改
sliderInput("N1S1", "N1",  -5, 0, 0.25，0.2) #后面以此为标准
sliderInput("N2S1", "N2",  -5, 0, 0.25) 
sliderInput("N3S1", "N3",  0, Inf,  20) 
sliderInput("N4S1", "N4",  0, Inf,  20)
sliderInput("N5S1", "N5",  0, Inf,  20) 
sliderInput("N6S1", "N6",  0, Inf,  20)
sliderInput("N7S1", "N7",  0, Inf,  20) 
sliderInput("N8S1", "N8",  0, Inf,  20)
```

Column D2 {.sidebar data-width=200}
-------------------------------------
```{r}
# {r child = 'Test/simulate.Rmd'}
hr()
h6("回购几率弹性设定")
#这里的range也需要进行更改owo
sliderInput("N1S2", "N1",   0, 50,  20,1) #后面以此为标准修改 
sliderInput("N2S2", "N2", -50,  0, -40)
sliderInput("N3S2", "N3", -50,  0, -30) 
sliderInput("N4S2", "N4",   0, 50,   0)
sliderInput("N5S2", "N5",   0, 50,  20) 
sliderInput("N6S2", "N6", -50,  0, -40)
sliderInput("N7S2", "N7", -50,  0, -30) 
sliderInput("N8S2", "N8",   0, 50,   0)
```

Column D3 {data-width=500}
-------------------------------------
### 預期报酬
```{r} 
output$eRet = renderPlot({

  S1=c( input$N1S1, input$N2S1, 
        input$N3S1, input$N4S1，
        input$N5S1, input$N6S1,
        input$N7S1, input$N8S1
    )
  S2=c( input$N1S2, input$N2S2, 
        input$N3S2, input$N4S2，
        input$N5S2, input$N6S2,
        input$N7S2, input$N8S2
    )
    #这是两个数组，包含不同群体的弹性信息，但是s2的应该更改一下
  d = seq(0,100,1) #x的座标，这里改成d
  par(mar=c(4,4,2,1))        #大小

#样本画图，x和y的lim由轴决定
  plot(1, 1, col='white', type='l', xlab='樣本大小',
       ylab='Revenue', main="期望報酬", 
       family="Microsoft JhengHei",
       xlim=input$X4,ylim=input$Y4)
       #两个1是什么
#加线
  abline(v=seq(input$X4[1],input$X4[2],100),
         h=seq(input$Y4[1],input$Y4[2],1),
         col='lightgray',lty=3)
#
  for(i in 1:length(A)) {#ut检验的究竟是什么东西，跟我们做的有什么关系？？？
    y = sapply(x, ut, d=input$D, a=A[i], c=input$C, pay=pay)
    nx = x[which.max(y)]
    pwr = pwr.t.test(nx,input$D,A[i])$power #
    AS[i] = sprintf("%.3f (%.3f, %d, %.3f)",A[i],pwr,nx,max(y))
    lines(x, y, col=i, lwd=2)       #曲线设定
    points(nx, max(y),col=i,pch=19) #最高点
    }
#
  legend("topright",AS,lty=1,col=1:length(A),lwd=2,
         title="  Sig.level (Power,  N,  Ut.)")
  })

```

Column D4 {data-width=300}
-------------------------------------
### 講義： 


### 影片

